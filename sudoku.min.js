"use strict";(()=>{let endTime;const rows=9,cols=9,board=document.getElementById("sudoku"),solveBtn=document.getElementById("solve"),resetSolutionBtn=document.getElementById("resetSolution"),resetEntryBtn=document.getElementById("resetEntries"),solution=document.getElementById("solution"),generate=document.getElementById("generate"),copiedBoard=[];let timedOut=!1,solved=!1;const randomIntFromInterval=(min,max)=>Math.floor(Math.random()*(max-min+1)+min),main=()=>{if(!validate())return document.getElementById("invalidmessage").classList.remove("hide"),void document.getElementById("invalidmessage").classList.add("show");document.getElementById("invalidmessage").classList.add("hide"),document.getElementById("invalidmessage").classList.remove("show");for(let y=0;y<9;y++)for(let x=0;x<9;x++)copiedBoard[y][x]=document.getElementById("s"+y+x).value;solve()},validate=()=>{let counter=0;for(let y=0;y<9;y++)for(let x=0;x<9;x++)""!==document.getElementById("s"+y+x).value&&counter++;if(0===counter)return!1;var rv=!0;const validValues=["1","2","3","4","5","6","7","8","9",""];for(let y=0;y<9;y++)for(let x=0;x<9;x++)document.getElementById("s"+y+x).style.backgroundColor="aliceblue",validValues.includes(document.getElementById("s"+y+x).value)||(document.getElementById("s"+y+x).style.backgroundColor="red",rv=!1);return rv},timeOutHandler=()=>{for(let y=0;y<9;y++)for(let x=0;x<9;x++)document.getElementById("a"+y+x).value="";confirm("No solution was found in time. Clear entries and retry?")&&(alert("Page will Reload."),setInterval(()=>location.reload(),1e3))},solve=()=>{if(!timedOut&&!solved){if(Date.now()>endTime)return timedOut=!0,void timeOutHandler();for(let y=0;y<9;y++)for(let x=0;x<9;x++)if(""==copiedBoard[y][x]){for(let n=1;n<10;n++)possible(y,x,n)&&(copiedBoard[y][x]=n,solve(),copiedBoard[y][x]="");return}for(let y=0;y<9;y++)for(let x=0;x<9;x++)document.getElementById("a"+y+x).value=copiedBoard[y][x];solved=!0}},possible=(y,x,n)=>{for(let i=0;i<9;i++)if(copiedBoard[y][i]==n)return!1;for(let i=0;i<9;i++)if(copiedBoard[i][x]==n)return!1;const x0=3*Math.floor(x/3),y0=3*Math.floor(y/3);for(let i=0;i<3;i++)for(let j=0;j<3;j++)if(copiedBoard[y0+i][x0+j]==n)return!1;return!0},clearEntries=()=>{for(let y=0;y<9;y++)for(let x=0;x<9;x++)document.getElementById("s"+y+x).value="",copiedBoard[x][y]=""},clearAnswers=()=>{for(let y=0;y<9;y++)for(let x=0;x<9;x++)document.getElementById("a"+y+x).value="",document.getElementById("a"+y+x).style.color="black",copiedBoard[x][y]=""},generateRandomBoard=()=>{copiedBoard[0][0]=randomIntFromInterval(1,9),copiedBoard[1][7]=randomIntFromInterval(1,9),copiedBoard[2][4]=randomIntFromInterval(1,9),copiedBoard[3][3]=randomIntFromInterval(1,9),copiedBoard[4][1]=randomIntFromInterval(1,9),copiedBoard[5][8]=randomIntFromInterval(1,9),copiedBoard[6][6]=randomIntFromInterval(1,9),copiedBoard[7][2]=randomIntFromInterval(1,9),copiedBoard[8][5]=randomIntFromInterval(1,9),solve()};generate.addEventListener("click",()=>{clearAnswers(),clearEntries(),timedOut=!1,solved=!1,endTime=Date.now()+3e3,generateRandomBoard()}),resetSolutionBtn.addEventListener("click",()=>{timedOut=!1,solved=!1,clearAnswers()}),resetEntryBtn.addEventListener("click",()=>{timedOut=!1,solved=!1,clearEntries()}),solveBtn.addEventListener("click",()=>{timedOut=!1,endTime=Date.now()+3e3,main()});for(let i=0;i<9;i++){copiedBoard.push([]);const entryRow=document.createElement("div"),solutionRow=document.createElement("div");board.appendChild(entryRow),solution.appendChild(solutionRow);for(let j=0;j<9;j++){const entry=document.createElement("input"),ans=document.createElement("input");solutionRow.appendChild(ans),entryRow.appendChild(entry),entry.id="s"+i+j,ans.id="a"+i+j,ans.readOnly=!0,2!==j&&5!==j||(entry.classList.add("rightBorder"),ans.classList.add("rightBorder")),2!==i&&5!==i||(entry.classList.add("bottomBorder"),ans.classList.add("bottomBorder"))}}})();